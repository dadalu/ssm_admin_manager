<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wang.user.mapper.UserMapper">
    <!--管理员查看用户信息-->
	<select id="getUser" parameterType="map" resultType="java.util.Map">

		select user_id,user_name,phone,email,department,classify,sign,sex from user where flag = 0
        <!--<if test="userName!=null">and user_name = #{userName,jdbcType = VARCHAR}</if>
        <if test="num>=0">
            limit #{num,jdbcType=DECIMAL},#{limit,jdbcType=DECIMAL};
        </if>-->
        <choose>
            <when test="userName!=null">
                and user_name like "%"#{userName,jdbcType = VARCHAR}"%"
            </when>
            <otherwise>
                limit #{num,jdbcType=DECIMAL},#{limit,jdbcType=DECIMAL}
            </otherwise>
        </choose>
	</select>
    <!--获取用户数-->
    <select id="getUserCount" parameterType="map" resultType="Map">
        select count(*) as count from user where flag = 0;
	</select>
    <select id="getUserPrivateInfo" parameterType="map" resultType="java.util.Map">
		select user_id,user_name,phone,email,department,classify,sign,sex from user where
		user_name = #{userName,jdbcType = VARCHAR} and flag = 0;
	</select>
    <!--用户查看个人信息-->
    <select id="getUserInfo" parameterType="map" resultType="java.util.Map">
        select * from user where user_name = #{userName,jdbcType = VARCHAR} and flag = 0;
    </select>
    <!--添加用户-->
    <insert id="insertUser" parameterType="map">
        insert into user(user_name,password,phone,email,department,classify,sign,sex)
        values(#{userName,jdbcType = VARCHAR},#{password,jdbcType = VARCHAR},#{phone,jdbcType = DECIMAL},
        #{email,jdbcType = VARCHAR},#{department,jdbcType = VARCHAR},#{classify,jdbcType = VARCHAR},#{sign,jdbcType = VARCHAR},
        #{sex,jdbcType = VARCHAR});
        insert into user_role(user_id,role_id)
        select u.user_id,r.role_id from user u,role r where u.user_name = #{userName,jdbcType = VARCHAR}
        and r.role_id = #{roleId,jdbcType = DECIMAL};
    </insert>
    <!--修改用户-->
    <insert id="updateUser" parameterType="map">
        update user set
        user_name=#{userName,jdbcType = VARCHAR},
        password=#{password,jdbcType = VARCHAR},
        phone=#{phone,jdbcType = DECIMAL},
        email=#{email,jdbcType = VARCHAR},
        department=#{department,jdbcType = VARCHAR},
        classify=#{classify,jdbcType = VARCHAR},
        sign=#{sign,jdbcType = VARCHAR},
        sex=#{sex,jdbcType = VARCHAR}

    </insert>
    <!--删除用户，设置删除标志位为1，并不删除实际数据-->
    <update id="deleteUser" parameterType="map">
        update user set flag = 1 where user_name = #{userId,jdbcType=DECIMAL}
    </update>
    <!--选择管理员所在组的所有用户-->
    <select id="selectUserInGroup" parameterType="map" resultType="map">
        select u.user_id as userId from user u
        left join user_role ur on u.user_id = ur.user_id
        left join role r on ur.role_id= r.role_id
				left join role_rolegroup rr on r.role_id = rr.role_id
        where rr.rolegroup_id =
        (select rg.rolegroup_id from rolegroup rg  left join
        role_rolegroup rrg on rg.rolegroup_id = rrg.rolegroup_id
        left join role r on r.role_id = rrg.role_id
        where r.role_id =
        (select r.role_id from role r left join user_role ur on ur.role_id = r.role_id
        left join user u on u.user_id = ur.user_id
        where u.user_id =#{userId,jdbcType=DECIMAL}));
    </select>
    <!--删除管理员时，其相关人员同时删除-->
    <update id="deleteAdmin" parameterType="list">
        <foreach collection="list" item="item" separator=";">
            update user set flag = 1 where user_id = #{item.userId,jdbcType = DECIMAL}
        </foreach>
    </update>
</mapper>